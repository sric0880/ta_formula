# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build-macos:
    strategy:
      matrix:
        version: [3.9]

    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.version }}

    - name: Install TA-Lib
      run: |
        ./tools/build_talib_from_source.bash
      # env:
      #   DEPS_PATH: ${{ github.workspace }}/dependencies
      #   TA_INCLUDE_PATH: ${{ github.workspace }}/dependencies/include
      #   TA_LIBRARY_PATH: ${{ github.workspace }}/dependencies/lib

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools
        python -m pip install --upgrade wheel
        python -m pip install -r requirements.txt

    - name: Build cython modules in-place
      run: |
        python setup.py build_ext --inplace
      # env:
      #   TA_INCLUDE_PATH: ${{ github.workspace }}/dependencies/include
      #   TA_LIBRARY_PATH: ${{ github.workspace }}/dependencies/lib

    - name: Build package
      run: python setup.py sdist bdist_wheel
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: dist-sdist
        path: dist/
        overwrite: true

  build-manylinux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build wheel on manylinux
      uses: pypa/cibuildwheel@v2.20.0
      env:
        CIBW_PLATFORM: linux
        CIBW_BUILD: cp39-*
        CIBW_PROJECT_REQUIRES_PYTHON: ">=3.9"
        CIBW_BUILD_FRONTEND: "pip"
        # CIBW_ENVIRONMENT: DEPS_PATH=${{ github.workspace }}/dependencies TA_INCLUDE_PATH=${{ github.workspace }}/dependencies/include TA_LIBRARY_PATH=${{ github.workspace }}/dependencies/lib
        # CIBW_ENVIRONMENT_PASS_LINUX: DEPS_PATH TA_INCLUDE_PATH TA_LIBRARY_PATH
        CIBW_BEFORE_BUILD_LINUX: bash ./tools/build_talib_from_source.bash
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: dist-wheels
        path: ./wheelhouse/*.whl

  publish-to-pypi:
    needs:
    - build-macos
    - build-manylinux
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/ta_formula
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        pattern: dist-*
        path: dist
        merge-multiple: true
    - name: pypi-publish
      uses: pypa/gh-action-pypi-publish@v1.9.0