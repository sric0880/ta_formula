# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        run: pipx run build --sdist

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # macos-13 is an intel runner, macos-14 is apple silicon
        os: [ubuntu-latest, macos-13, macos-14]
    steps:
    - uses: actions/checkout@v4

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.20.0
      env:
        CIBW_BUILD: cp39-*
        CIBW_PROJECT_REQUIRES_PYTHON: ">=3.9"
        CIBW_BUILD_FRONTEND: "pip"
        # CIBW_ENVIRONMENT: DEPS_PATH=${{ github.workspace }}/dependencies TA_INCLUDE_PATH=${{ github.workspace }}/dependencies/include TA_LIBRARY_PATH=${{ github.workspace }}/dependencies/lib
        # CIBW_ENVIRONMENT_PASS_LINUX: DEPS_PATH TA_INCLUDE_PATH TA_LIBRARY_PATH
        CIBW_BEFORE_ALL_LINUX: >
         yum install -y wget &&
         yum install -y sudo
        CIBW_BEFORE_BUILD_LINUX: bash ./tools/build_talib_from_source.bash
        CIBW_BEFORE_BUILD_MACOS: bash ./tools/build_talib_from_source.bash

    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
        path: ./wheelhouse/*.whl

  publish-to-pypi:
    needs:
    - build_sdist
    - build_wheels
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/ta_formula
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        pattern: cibw-*
        path: dist
        merge-multiple: true
    - name: pypi-publish
      uses: pypa/gh-action-pypi-publish@v1.9.0